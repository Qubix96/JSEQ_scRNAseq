#!/bin/bash

echo 'Welcome in the JSEQ® scRNAseq pipeline which was prepared at Institute of Bioorganic Chemistry, Polish Academy of Sciences in Poznań'


echo 'All information and references you can check in the file JSEQ manual on my GitHub'

echo 'Contact: jkubis@ibch.poznan.pl or jakub.kubis1996@gmail.com'

echo ''
echo ''

function start {

echo 'Choose JSEQ function:'
echo '-first installation [install]'
echo '-download RefGenome (GENCODE) [genome]'
echo '-creat new project [project]'
echo '-start analysis [analysis]'
echo ''
echo 'Choose function:'
echo ''
	read s
	s=$(echo $s | tr '[:upper:]' '[:lower:]')

if [[ $s == 'install' ]]
then
		log_install=$(pwd)/setup/install.log.out

        source=$(pwd)/setup/setup
        cd $(pwd)/setup
        source $source
		permission 
		echo $(date) 'Python installing and libraries...'
		python >> $log_install 2>&1
		echo $(date) 'R installing and libraries...'
		r_base >> $log_install 2>&1
		echo $(date) 'JAVA installing...'
		java >> $log_install 2>&1
		echo $(date) 'SAMtools installing...'
		SAMtools >> $log_install 2>&1
		echo $(date) 'fastp installing and libraries...'
		fastp >> $log_install 2>&1
		echo $(date) 'dropSEQtools installing...'
		DropSeq >> $log_install 2>&1
		echo $(date) 'picard installing...'
		picard >> $log_install 2>&1
        cd ..
		echo ''
		echo "Installing completed. Before run the JSEQ check the install.log file in setup directory for some errors."
		echo $"If you have trouble with installing any parts of the pipeline, you can try install missing files or libraries manually [instruction in JSEQ manual] or contact us"
		echo ''
		
elif [[ $s == 'genome' ]]
then
        source=$(pwd)/scripts/genome_indexing
		source $source
		GENOME
		
elif [[ $s == 'project' ]]
then
        source=$(pwd)/scripts/projects
		source $source
		PROJECT
		
elif [[ $s == 'analysis' ]]
then
		source=$(pwd)/scripts
		source $source/project_selection
		select_analysis
		
		function experiment_selection {
		if [[ $d  == *'fq'* && $species  == 'human' ]] || [[ $d  == *'fq'* && $species  == 'mice' ]];
then
		log=$(pwd)/projects/$project_name_mode/results/process.log.out
		
        source=$(pwd)/scripts
		source $source/analysis_species
		echo ''
		echo 'Process start...'
		echo ''
		echo $(date) 'Trimming of the adapters and quality control of the reads'
		TRIMMING > $log 2>&1
		echo $(date) 'Starting of the mapping process'
		STAR_MAPPING >> $log 2>&1
		echo $(date) 'Creating the whitelist'
		whitelist >> $log 2>&1
		echo $(date) 'UMIs and barcodes extraction'
		umi_extract >> $log 2>&1
		merge_reads >> $log 2>&1
		barcodes >> $log 2>&1
		echo $(date) 'Creating genome reference files'
		create_ref >> $log 2>&1
		reduce_annotation_gtf >> $log 2>&1
		create_ref_annotation >> $log 2>&1
		echo $(date) 'Mapping of the reads to the exonic regions'
		dropSEQ >> $log 2>&1
		echo $(date) 'Detecting and repairing substitution errors in the cell barcodes'
		final_exon >> $log 2>&1
		echo $(date) 'Detecting and repairing barcode indexes synthesis errors'
		completed_bam >> $log 2>&1
		echo $(date) 'Generating of the intervals'
		rna_intervals >> $log 2>&1
		echo $(date) 'Creating list of count'
		umi_expression >> $log 2>&1
		echo $(date) 'Creating metrics of the genetics parts content'
		scRNAmetrics >> $log 2>&1
		metric_plot >> $log 2>&1
		echo $(date) 'Creating matrix of counts'
		convert_mtx_umi >> $log 2>&1
		echo $(date) 'Counts analysis and creating report'
		seurat >> $log 2>&1
		echo ''
		echo 'Process completed. Check '$project_name_mode" for the results (REPORT). If you don't see the REPORT file, so check process.log file for some errors"
		echo ''
		
elif
		[[ $d  == *'_fq'* ]] && [[ $species  == 'mix' ]];
then
		log=$(pwd)/projects/$project_name_mode/results/process.log.out
		
        source=$(pwd)/scripts
		source $source/analysis_mix
		echo ''
		echo 'Process start...'
		echo ''
		echo $(date) 'Trimming of the adapters and quality control of the reads'
		directory >> $log 2>&1
		TRIMMING >> $log 2>&1
		echo $(date) 'Starting of the mapping process'
		STAR_MAPPING >> $log 2>&1
		echo $(date) 'Creating the whitelist'
		whitelist >> $log 2>&1
		echo $(date) 'UMIs and barcodes extraction'
		umi_extract >> $log 2>&1
		merge_reads >> $log 2>&1
	    barcodes >> $log 2>&1
		echo $(date) 'Creating genome reference files'
		create_ref >> $log 2>&1
		reduce_annotation_gtf >> $log 2>&1
		create_ref_annotation >> $log 2>&1
		echo $(date) 'Mapping of the reads to the exonic regions'
		dropSEQ >> $log 2>&1
		echo $(date) 'Detecting and repairing substitution errors in the cell barcodes'
		final_exon >> $log 2>&1
		echo $(date) 'Detecting and repairing barcode indexes synthesis errors'
		completed_bam >> $log 2>&1
		echo $(date) 'Generating of the intervals'
		rna_intervals >> $log 2>&1
		echo $(date) 'Dividing combined scingle cell data to mice and human experiments analysis'
		filtr_mice >> $log 2>&1
		filtr_human >> $log 2>&1
		echo $(date) 'Creating list of count'
		umi_expression_mice >> $log 2>&1
		umi_expression_human >> $log 2>&1
		echo $(date) 'Creating metrics of the genetics parts content'
		scRNAmetrics_mice >> $log 2>&1
		scRNAmetrics_human >> $log 2>&1
		metric_plot_mice >> $log 2>&1
		metric_plot_human >> $log 2>&1
		echo $(date) 'Creating matrix of counts'
		convert_mtx_umi_mice >> $log 2>&1
		convert_mtx_umi_human >> $log 2>&1
		echo $(date) 'Counts analysis and creating report'		
		seurat_mix >> $log 2>&1
		echo ''
		echo 'Process completed. Check '$project_name_mode" for the results (REPORT). If you don't see the REPORT file, so check process.log file for some errors"
		echo ''
		
elif	[[ $species  == 'human' && $d  == *'_exp'* ]] || [[ $species  == 'mice' && $d  == *'_exp'* ]] || [[ $species  == 'mix' && $d  == *'_exp'* ]]
then

		log=$(pwd)/projects/$project_name_mode/results/process.log.out
		
		source=$(pwd)/scripts
		source $source/seurat_analysis
		echo ''
		echo 'Process start...'
		echo ''
		echo $(date) 'Counts / expression analysis and creating report'	
		seurat_start >> $log 2>&1
		echo 'Process completed. Check '$project_name_mode" for the results (REPORT). If you don't see the REPORT file, so check process.log file for some errors"
		echo ''
else
        echo ''
		echo 'Experiment failed - check all the data from project'
		echo ''
		start
fi
}

experiment_selection

else
        start
fi


}

start